plotswithoutNA <- xyplots
for (i in 1:length(plotswithoutNA)) {
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 4}
length(plotswithoutNA)
i <- 1
for (i in 1:length(plotswithoutNA)) {
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 4}
length(plotswithoutNA)
View(plotswithoutNA)
length(plotswithoutNA$V3)
i <- 1
for (i in 1:length(plotswithoutNA$V3)) {
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 4}
i<-1
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- data.frame()
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 4
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
for (i in 1:10)) {
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 4}
plotswithNA <- data.frame()
i <- 1
for (i in 1:10)) {
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 4
}
plotswithNA <- data.frame()
i <- 1
for (i in 1:10)) {
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 4
}
i <- 1
for (i in 1:10) {
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 4
}
plotswithNA <- data.frame()
i <- 1
for (i in 1:10) {
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[i,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 4
}
plotswithNA <- data.frame()
i <- 1
for (i in (1:length(plotswithoutNA$V3)/4)) {
j <- ((i-1)*4)
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+4,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 1
}
for (i in 1:10) {
j <- ((i-1)*4)
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+4,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 1
}
plotswithNA <- data.frame()
i <- 1
for (i in 1:10) {
j <- ((i-1)*4)
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+4,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 1
}
for (i in 1:(plotswithoutNA$V3)) {
j <- ((i-1)*4)
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+4,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 1
}
plotswithNA <- data.frame()
i <- 1
for (i in 1:(plotswithoutNA$V3)) {
j <- ((i-1)*4)
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+4,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 1
}
plotswithNA <- data.frame()
plotswithNA <- data.frame()
i <- 1
for (i in 1:(length(plotswithoutNA$V3)/4)) {
j <- ((i-1)*4)
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+4,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 1
}
getwd()
pNDVI=raster("/Desktop/prairieNDVI.tif")
library(raster)
??raster
install.packages("raster")
library(raster)
install.packages("rgdal")
library(rgdal)
library(foreign)
library(tiff)
install.packages("tiff")
library(tiff)
library(sp)
library(rgdal)
library(raster)
install.packages("raster")
library(raster)
library(splancs)
install.packages("splancs")
library(splancs)
pNDVI <- raster("/Users/lanescher/Dropbox/prairie/prairie tifs/singlelayer/only-prairie-ndvi.tif")
plotdf <- function(area, samples) {
plotdflist <- list()
for (i in 1:length(samples)) {
smallarea <- crop(area, samples[[i]]) #gets raster surrounding plot
df <- as.data.frame(smallarea, xy = TRUE) #converts raster to df
inside <- pip(df, samples[[i]]) #creates df with raster points that are within plot
plotdflist[[length(plotdflist + 1)]] <- inside # adds df to list
}
return(plotdflist)
}
plotcoords <- read.csv("/Users/lanescher/Dropbox/prairie/data/prairiecoords.txt", sep = "\t", header = TRUE)
plotswithoutNA <- plotcoords[c(5,6)]
plotswithNA <- data.frame()
i <- 1
for (i in 1:(length(plotswithoutNA$X_est)/4)) {
j <- ((i-1)*4)
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+2,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+3,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+4,])
plotswithNA <- rbind(plotswithNA, plotswithoutNA[j+1,])
plotswithNA <- rbind(plotswithNA, c(NA, NA))
i <- i + 1
}
names(plotswithNA)[names(plotswithNA)=="X_est"] <- "x"
names(plotswithNA)[names(plotswithNA)=="Y_est"] <- "y"
i <- 1
plotlist <- list(plotswithNA[1:5,1:2])
for (i in 1:(length(plotswithNA$x)/6)) {
start <- i * 6 + 1
end <- (i * 6 + 1) + 4
plotlist[[length(plotlist) + 1]] <- plotswithNA[start:end, 1:2]
i <- i + 1
}
plotlist[[438]] <- NULL # remove last item from list (it is empty)
testdf <- plotdf(pNDVI, plotlist)
plotdf <- function(area, samples) {
plotdflist <- list()
for (i in 1:length(samples)) {
smallarea <- crop(area, samples[[i]]) #gets raster surrounding plot
df <- as.data.frame(smallarea, xy = TRUE) #converts raster to df
inside <- pip(df, samples[[i]]) #creates df with raster points that are within plot
plotdflist[[length(plotdflist) + 1]] <- inside # adds df to list
}
return(plotdflist)
}
testdf <- plotdf(pNDVI, plotlist)
i <- 1
testdf <- plotdf(pNDVI, plotlist)
smalllist <- plotlist[[1:3]]
smalllist <- plotlist[[1]]
plotlist[[1:2]]
plotlist[[1:2,]]
smalllist <- plotlist[[1]]
testdf <- plotdf(pNDVI, smalllist)
smalllist <- list(plotlist[[1]])
testdf <- plotdf(pNDVI, smalllist)
plotone <- testdf[[1]]
View(plotone)
hist(plotone$only.prairie.ndvi)
hist(plotone$only.prairie.ndvi)
smalllist <- list(plotlist[[2]])
testdf <- plotdf(pNDVI, smalllist)
plotone <- testdf[[1]]
hist(plotone$only.prairie.ndvi)
smalllist <- list(plotlist[[3]])
testdf <- plotdf(pNDVI, smalllist)
plotone <- testdf[[1]]
hist(plotone$only.prairie.ndvi)
smalllist <- list(plotlist[[4]])
testdf <- plotdf(pNDVI, smalllist)
plotone <- testdf[[1]]
hist(plotone$only.prairie.ndvi)
smalllist <- list(plotlist[[5]])
testdf <- plotdf(pNDVI, smalllist)
plotone <- testdf[[1]]
hist(plotone$only.prairie.ndvi)
smalllist <- list(plotlist[[6]])
testdf <- plotdf(pNDVI, smalllist)
plotone <- testdf[[1]]
hist(plotone$only.prairie.ndvi)
smalllist <- list(plotlist[[7]])
testdf <- plotdf(pNDVI, smalllist)
plotone <- testdf[[1]]
hist(plotone$only.prairie.ndvi)
?pip
x[,2]
View(x)
plotdf <- function(area, samples) {
plotdflist <- list()
for (i in 1:length(samples)) {
smallarea <- crop(area, samples[[i]]) #gets raster surrounding plot
df <- as.data.frame(smallarea, xy = TRUE) #converts raster to df
inside <- pip(df, samples[[i]]) #creates df with raster points that are within plot
plotdflist[[length(plotdflist) + 1]] <- inside[,3] # adds df to list
}
return(plotdflist)
}
smalllist <- list(plotlist[[7]])
testdf <- plotdf(pNDVI, smalllist)
plotone <- testdf[[1]]
hist(plotone$only.prairie.ndvi)
smalllist <- list(plotlist[[7]])
testdf <- plotdf(pNDVI, smalllist)
plotone <- testdf[[1]]
hist(plotone)
smalllist <- list(plotlist[[7]], plotlist[[8]])
smalllist <- list(c(plotlist[[7]], plotlist[[8]]))
testdf <- plotdf(pNDVI, smalllist)
smalllist[[2]] <- plotlist[[8]]
testdf <- plotdf(pNDVI, smalllist)
?append
low <- c()
high <- c()
smallarea <- crop(pNDVI, plotlist[[1]]) #gets raster surrounding plot
df <- as.data.frame(smallarea, xy = TRUE) #converts raster to df
inside <- pip(df, plotlist[[1]]) #creates df with raster points that are within plot
low <- inside[which(inside < .1)]
low <- inside[,3] < .1)]
low <- inside[,3] < .1
low <- inside[,3][which(inside[,3] < .1)]
length(low)
high <- inside[,3][which(inside[,3] > .1)]
length(high)
percent <- length(low)/(length(low) + length(high))
percent
plotcover <- function(area, samples) {
cover <- c(1:length(samples))
for (i in 1:length(samples)) {
low <- c()
high <- c()
smallarea <- crop(area, samples[[i]]) #gets raster surrounding plot
df <- as.data.frame(smallarea, xy = TRUE) #converts raster to df
inside <- pip(df, samples[[i]]) #creates df with raster points that are within plot
low <- inside[,3][which(inside[,3] < .1)]
high <- inside[,3][which(inside[,3] > .1)]
percent <- length(low)/(length(low) + length(high))
cover[i] <- percent
}
return(cover)
}
ndvicover <- plotcover(pNDVI, plotlist)
ndvicover <- plotcover(pNDVI, smalllist)
plotcover <- function(area, samples) {
cover <- c(1:length(samples))
for (i in 1:length(samples)) {
low <- c()
high <- c()
smallarea <- crop(area, samples[[i]]) #gets raster surrounding plot
df <- as.data.frame(smallarea, xy = TRUE) #converts raster to df
inside <- pip(df, samples[[i]]) #creates df with raster points that are within plot
low <- inside[,3][which(inside[,3] < .1)]
high <- inside[,3][which(inside[,3] > .1)]
percent <- length(high)/(length(low) + length(high))
cover[i] <- percent
}
return(cover)
}
ndvicover <- plotcover(pNDVI, smalllist)
ndvicover <- plotcover(pNDVI, plotlist)
alldata <- read.csv("/Users/lanescher/Dropbox/prairie/data/alldata.csv")
View(alldata)
alldata$cover <- ndvicover
View(alldata)
ggplot(data = alldata, aes(alldata$biomass.all, alldata$cover))
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(data = alldata, aes(alldata$biomass.all, alldata$cover)) +
geom_point(aes)
ggplot(data = alldata, aes(alldata$biomass.all, alldata$cover)) +
geom_point()
alldata$covertimesndvi <- ndvicover * ndvi
alldata$covertimesndvi <- alldata$ndvicover * alldata$ndvi
alldata$covertimesndvi <- alldata$cover * alldata$ndvi
ggplot(data = alldata, aes(alldata$biomass.all, alldata$covertimesndvi)) +
geom_point()
ggplot(data = alldata, aes(alldata$biomass.all, alldata$covertimesndvi)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = alldata, aes(alldata$biomass.all, alldata$covertimesndvi)) +
geom_point(aes(color = alldata$Plot.category)) +
geom_smooth(method = "lm")
ggplot(data = alldata, aes(alldata$biomass.all, alldata$covertimesndvi)) +
geom_point(aes(color = alldata$Plot.category)) +
geom_smooth(method = "lm", aes(color = alldata$Plot.category))
mdata <- read.csv("/Users/lanescher/Downloads/all.csv")
View(mdata)
library(ggplot2)
ggplot(data = mdata, aes(x = mdata$maindiameter.171221, y = mdata$maindiameter.180109)) +
geom_point()
ggplot(data = mdata, aes(x = mdata$maindiameter.171221, y = mdata$maindiameter.180109)) +
geom_point() +
geom_line()
ggplot(data = mdata, aes(x = mdata$maindiameter.171221, y = mdata$maindiameter.180109)) +
geom_point() +
geom_smooth()
ggplot(data = mdata, aes(x = mdata$maindiameter.171221, y = mdata$maindiameter.180109)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = mdata, aes(x = mdata$branchdiameter.171221, y = mdata$branchdiameter.180109)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = mdata, aes(x = mdata$mainlength.171221, y = mdata$mainlength.180109)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = mdata, aes(x = mdata$branchlength.171221, y = mdata$branchlength.180109)) +
geom_point() +
geom_smooth(method = "lm")
mdata$mdiamperror <- (mdata$maindiameter.171221 - mdata$maindiameter.180109)/mdata$maindiameter.171221
mdata$bdiamperror <- (mdata$branchdiameter.171221 - mdata$branchdiameter.180109)/mdata$branchdiameter.171221
mdata$mlenperror <- (mdata$mainlength.171221 - mdata$mainlength.180109)/mdata$mainlength.171221
mdata$blenperror <- (mdata$branchlength.171221 - mdata$branchlength.180109)/mdata$branchlength.171221
ggplot(data = mdata, aes(x = mdata$maindiameter.171221, y = mdata$mdiamperror)) +
geom_point() +
geom_smooth(method = "lm")
mdata$mdiamperror <- abs((mdata$maindiameter.171221 - mdata$maindiameter.180109)/mdata$maindiameter.171221)
mdata$bdiamperror <- abs((mdata$branchdiameter.171221 - mdata$branchdiameter.180109)/mdata$branchdiameter.171221)
mdata$mlenperror <- abs((mdata$mainlength.171221 - mdata$mainlength.180109)/mdata$mainlength.171221)
mdata$blenperror <- abs((mdata$branchlength.171221 - mdata$branchlength.180109)/mdata$branchlength.171221)
ggplot(data = mdata, aes(x = mdata$maindiameter.171221, y = mdata$mdiamperror)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = mdata, aes(x = mdata$maindiameter.171221, y = mdata$mlenperror)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = mdata, aes(x = mdata$maindiameter.180109, y = mdata$mlenperror)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = mdata, aes(x = mdata$branchdiameter.171221, y = mdata$bdiamperror)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = mdata, aes(x = mdata$maindiameter.171221, y = mdata$bdiamperror)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = mdata, aes(x = mdata$maindiameter.171221, y = mdata$blenperror)) +
geom_point() +
geom_smooth(method = "lm")
?melt
library(reshape2)
mdata <- read.csv("/Users/lanescher/Downloads/all.csv")
all.prairie <- read.csv("DATA/all.prairie.with.VI.values.csv")
getwd()
setwd("/Users/lanescher/Documents/GitHub")
all.prairie <- read.csv("DATA/all.prairie.with.VI.values.csv")
setwd("/Users/lanescher/Documents/GitHub/")
all.prairie <- read.csv("DATA/all.prairie.with.VI.values.csv")
setwd("/Users/lanescher/Documents/GitHub/prairie-biomass-2018")
all.prairie <- read.csv("DATA/all.prairie.with.VI.values.csv")
View(all.prairie)
length(all.prairie$X[which(all.prairie$TMT.use == 1)])
length(all.prairie$X[which(all.prairie$Plot.category == "treatment")])
length(all.prairie$X[which(all.prairie$Plot.category == "Treatment")])
use.prairie <- all.prairie[which(all.prairie$Plot.category == "Monoculture" |
all.prairie$TMT.use == 1)]
use.prairie <- all.prairie[which(all.prairie$Plot.category == "Monoculture" |
all.prairie$TMT.use == 1),]
categories = c("biomass.all", "biomass.monocultures", "biomass.tmts")
predictors = c("pNDVIvalues","ndvicover",
"pGNDVIvalues", "gndvicover",
"pGDVI2values", "gdvi2cover",
"ndvi.threshold", "ndvi.threshold.var",
"gndvi.threshold", "gndvi.threshold.var",
"ndvi.threshold.noflowers", "gndvi.threshold.noflowers")
i <- 1
j <- 1
all.rsqrs <- as.data.frame(c(1:length(predictors)))
all.coefs <- as.data.frame(c(1:length(predictors)))
for (j in 1:length(categories)) {
rsqrs <- c()
coefs <- c()
for (i in 1:length(predictors)) {
lm.test <- lm(use.prairie[[categories[j]]] ~ use.prairie[[predictors[i]]])
rsqrs[length(rsqrs) + 1] <- summary(lm.test)$adj.r.squared
coefs[length(coefs) + 1] <- summary(lm.test)$coef[2,1]
i <- i + 1
}
all.rsqrs[j] <- rsqrs
all.coefs[j] <- coefs
j <- j + 1
}
i <- 1
j <- 1
all.rsqrs <- as.data.frame(c(1:length(predictors)))
all.coefs <- as.data.frame(c(1:length(predictors)))
for (j in 1:length(categories)) {
rsqrs <- c()
coefs <- c()
for (i in 1:length(predictors)) {
lm.test <- lm(all.prairie[[categories[j]]] ~ all.prairie[[predictors[i]]])
rsqrs[length(rsqrs) + 1] <- summary(lm.test)$adj.r.squared
coefs[length(coefs) + 1] <- summary(lm.test)$coef[2,1]
i <- i + 1
}
all.rsqrs[j] <- rsqrs
all.coefs[j] <- coefs
j <- j + 1
}
summary(lm.test)$coef
all.prairie <- read.csv("DATA/all.prairie.with.VI.values.csv")
categories = c("biomass.all", "biomass.monocultures", "biomass.tmts")
predictors = c("pNDVIvalues","ndvicover",
"pGNDVIvalues", "gndvicover",
"pGDVI2values", "gdvi2cover",
"ndvi.threshold", "ndvi.threshold.var",
"gndvi.threshold", "gndvi.threshold.var",
"ndvi.threshold.noflowers", "gndvi.threshold.noflowers")
i <- 1
j <- 1
all.rsqrs <- as.data.frame(c(1:length(predictors)))
all.coefs <- as.data.frame(c(1:length(predictors)))
for (j in 1:length(categories)) {
rsqrs <- c()
coefs <- c()
for (i in 1:length(predictors)) {
lm.test <- lm(all.prairie[[categories[j]]] ~ all.prairie[[predictors[i]]])
rsqrs[length(rsqrs) + 1] <- summary(lm.test)$adj.r.squared
coefs[length(coefs) + 1] <- summary(lm.test)$coef[2,1]
i <- i + 1
}
all.rsqrs[j] <- rsqrs
all.coefs[j] <- coefs
j <- j + 1
}
