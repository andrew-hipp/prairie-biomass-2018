sapply(., paste, collapse = ".")
plot.id = paste(plot.id, cover.diversity$type, sep = "_")
table(plot.id)
plots.A <- cover.diversity$plot[which(cover.diversity$block == 'A')]
plot.A.ndvi <- ndvi.mat$ndvi[which(as.character(ndvi$plot) %in% names(plots.A))]
plot.notA <- plot.id[setdiff(names(plot.id[which(plot.id %in% plots.A)]), names(plots.A))]
plots.A <- plot.id[names(plot.id) %in% as.character(plots.A)]
plots.A <- cover.diversity$plot[which(cover.diversity$block == 'A')]
pcon.A <- plot.id[names(plot.id) %in% as.character(plots.A)]
plots.A
pcon.A <- plot.id[names(plot.id) %in% as.character(plots.A)]
head(plot.id)
names(pcon) %in% as.character(ndvi.mat$plot)]
names(pcon) %in% as.character(ndvi.mat$plot)
head(pcon)
prairie.design = load("DATA/plot.design.R")
prairie.design = load("../DATA/plot.design.R")
prairie.design = source("../DATA/plot.design.R")
View(prairie.design)
View(plot.design)
source("../DATA/plot.design.R")
remove(plot.design)
remove(praire.design)
remove(prairie.design)
source("../DATA/plot.design.R")
pcon=grep("_",pdesign$plotVector,value=T,fixed=T)
pcon=grep("_",plot.design$plotVector,value=T,fixed=T)
plot.id = strsplit(pcon, "_", fixed = T) %>% #Splits plot names so...
lapply(., head, 2) %>% #rep number, ie. "rep2", can be removed
sapply(., paste, collapse = "_") #Undoes the split
head(pcon)
treatment.plots=grep("_",plot.design$plotVector,value=T,fixed=T)
plot.id = strsplit(treatment.plots, "_", fixed = T) %>% #Splits plot names so...
lapply(., head, 2) %>% #rep number, ie. "rep2", can be removed
sapply(., paste, collapse = "_") #Undoes the split
table(plot.id)
plots.A <- cover.diversity$plot[which(cover.diversity$block == 'A')]
plots.A
plots.A <- plot.id[names(plot.id) %in% as.character(plots.A)]
plots.A
block.A.ndvi <- ndvi.mat$ndvi[which(as.character(ndvi.mat$plot) %in% names(plots.A))]
names(block.A.ndvi) <- ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(plots.A))]
head(block.A.ndvi)
block.A.ndvi
block.A.ndvi <- ndvi.mat$ndvi[which(as.character(ndvi.mat$plot) %in% names(plots.A))]
block.A.ndvi
plots.A = plot.design[["plotNumbers"]][["A"]]
plots.A = plot.design[["plotNumbers"]][[*[["A"]]
plots.A = plot.design[["plotNumbers"]][[*]][["A"]]
plots.A = plot.design[["plotNumbers"]][[,]][["A"]]
plots.A = grep("A",plot.design$plotNumbers,value=T)
View(plots.A)
soil.cover = read.csv("../DATA/dat.blocksSoilCover.csv")
View(soil.cover)
plots.A <- soil.cover$plot[which(soil.cover$block_BS.mod == 'A')]
plots.A <- plot.id[names(plot.id) %in% as.character(plots.A)]
block.A.ndvi <- ndvi.mat$ndvi[which(as.character(ndvi.mat$plot) %in% names(plots.A))]
table(block.A.ndvi)
plots.A
block.A.ndvi <- ndvi.mat$ndvi[which(as.character(ndvi.mat$plot) %in% names(plots.A))]
block.A.ndvi
names(block.A.ndvi) <- ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(plots.A))]
block.A.ndvi
rm(block.A.ndvi, pcon, pcon.A, plot.A.ndvi, plot.notA)
rm(tr.prairireNEW)
rm(tr.prairieNEW)
plots.A <- soil.cover$plot[which(soil.cover$block_BS.mod == 'A')]
plots.A
plots.A <- plot.id[names(plot.id) %in% as.character(plots.A)]
plots.A
plots.A <- soil.cover$plot[which(soil.cover$block_BS.mod == 'A')]
t.plots.A <- plot.id[names(plot.id) %in% as.character(plots.A)]
block.A.t.ndvi <- soil.cover$ndvi_v1[which(as.character(soi.cover$plot) %in% names(t.plots.A))]
block.A.t.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
block.A.t.ndvi
names(block.A.t.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
block.A.t.ndvi
block.A.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.A)]), names(t.plots.A))]
block.A.rep
block.A.rep = soil.cover$ndvi_v1[which(as.character(soil$plot) %in% names(plot.notA))]
block.A.rep = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
block.A.rep
block.A.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.A)]), names(t.plots.A))]
block.A.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
block.A.rep.ndvi
names(block.A.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
block.A.rep.ndvi
block.A.t.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
names(block.A.t.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
block.A.t.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.A)]), names(t.plots.A))]
block.A.t.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.A.t.rep))]
names(block.A.t.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
names(block.A.t.ndvi) <- plot.id[names(block.A.t.ndvi)]
block.A.t.ndvi
names(block.A.rep.ndvi) <- plot.id[names(block.A.rep.ndvi)]
block.A.rep.ndvi
block.A.t.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.A)]), names(t.plots.A))]
block.A.t.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
names(block.A.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
names(block.A.ndvi) <- plot.id[names(block.A.t.ndvi)]
names(block.A.rep.ndvi) <- plot.id[names(block.A.rep.ndvi)]
block.A.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
names(block.A.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
block.A.t.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.A)]), names(t.plots.A))]
block.A.t.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
names(block.A.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
names(block.A.ndvi) <- plot.id[names(block.A.t.ndvi)]
names(block.A.rep.ndvi) <- plot.id[names(block.A.rep.ndvi)]
block.A.ndvi
plots.A <- soil.cover$plot[which(soil.cover$block_BS.mod == 'A')]
t.plots.A <- plot.id[names(plot.id) %in% as.character(plots.A)]
block.A.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
names(block.A.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
block.A.t.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.A)]), names(t.plots.A))]
block.A.t.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
names(block.A.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
names(block.A.ndvi) <- plot.id[names(block.A.t.ndvi)]
names(block.A.rep.ndvi) <- plot.id[names(block.A.rep.ndvi)]
block.A.ndvi
block.A.rep.ndvi
block.A.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
block.A.ndvi
names(block.A.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
block.A.ndvi
names(block.A.ndvi) <- plot.id[names(block.A.t.ndvi)]
block.A.ndvi
names(block.A.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
block.A.ndvi
block.A.t.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
names(block.A.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
block.A.ndvi
names(block.A.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
block.A.ndvi
names(block.A.ndvi) <- plot.id[names(block.A.t.ndvi)]
block.A.ndvi
block.A.rep.ndvi
names(block.A.ndvi) <- plot.id[names(block.A.ndvi)]
block.A.ndvi
plots.A <- soil.cover$plot[which(soil.cover$block_BS.mod == 'A')]
t.plots.A <- plot.id[names(plot.id) %in% as.character(plots.A)]
block.A.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
names(block.A.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.A))]
block.A.t.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.A)]), names(t.plots.A))]
block.A.t.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
names(block.A.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
names(block.A.ndvi) <- plot.id[names(block.A.ndvi)]
names(block.A.rep.ndvi) <- plot.id[names(block.A.rep.ndvi)]
block.A.ndvi
block.A.rep.ndvi
blockA.test=t.test(block.A.ndvi, block.A.rep.ndvi, paired=T)
blockA.test
block.A.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(plots.A))]
names(block.A.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(plots.A))]
block.A.rep.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.A.rep))]
names(block.A.rep.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.A.rep))]
names(block.A.biomass) = plot.id[names(block.A.biomass)]
names(block.A.rep.biomass) = plot.id[names(block.A.rep.biomass)]
block.A.biomass
plots.A
block.A.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(plots.A))]
block.A.biomass
block.A.rep.biomass
block.A.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.A))]
block.A.repp
block.A.rep
plots.A
block.A <- plot.id[names(plot.id) %in% as.character(plots.A)]
block.A
block.A.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.A))]
names(block.A.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.A))]
block.A.rep.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.A.rep))]
names(block.A.rep.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.A.rep))]
names(block.A.biomass) = plot.id[names(block.A.biomass)]
names(block.A.rep.biomass) = plot.id[names(block.A.rep.biomass)]
block.A.biomass
block.A.rep.biomass
plot.notA.biomass = plot.notA.biomass[-11] #Plot 67 biomass is missing from A, so counterpart is removed from notA
block.A.rep.biomass = block.A.rep.biomass[-11] #Plot 67 biomass is missing from A, so counterpart is removed from notA
block.A.rep.biomass
block.A.biomass.test = t.test(plot.notA.biomass, plot.A.biomass, paired = T)
block.A.biomass.test
block.A.biomass.test = t.test(block.A.biomass, block.A.rep.biomass, paired = T)
block.A.biomass.test
plots.B <- soil.cover$plot[which(soil.cover$block_BS.mod == 'B')]
t.plots.B <- plot.id[names(plot.id) %in% as.character(plots.B)]
##Block B and replicates NDVI
block.B.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(t.plots.B))]
names(block.B.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.B))]
block.B.t.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.B)]), names(t.plots.B))]
block.B.t.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.B.rep))]
names(block.B.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.B.rep))]
names(block.B.ndvi) <- plot.id[names(block.B.ndvi)]
names(block.B.rep.ndvi) <- plot.id[names(block.B.rep.ndvi)]
blockB.ndvi.test=t.test(block.B.ndvi, block.B.rep.ndvi, paired=T)
blockB.ndvi.test ##t.test of treatment plots in Block B against its replicates
##Block B and replicates biomass
block.B.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.B))]
names(block.B.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.B))]
block.B.rep.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.B.rep))]
names(block.B.rep.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.B.rep))]
names(block.B.biomass) = plot.id[names(block.B.biomass)]
names(block.B.rep.biomass) = plot.id[names(block.B.rep.biomass)]
block.B.rep.biomass = block.B.rep.biomass[-11] #Plot 67 biomass is missing from B, so counterpart is removed from notB
block.B.biomass.test = t.test(plot.notB.biomass, plot.B.biomass, paired = T)
block.B.biomass.test
##Block B and replicates NDVI
plots.B <- soil.cover$plot[which(soil.cover$block_BS.mod == 'B')]
t.plots.B <- plot.id[names(plot.id) %in% as.character(plots.B)]
block.B.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(t.plots.B))]
names(block.B.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.B))]
block.B.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.B)]), names(t.plots.B))]
block.B.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.B.rep))]
names(block.B.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.B.rep))]
names(block.B.ndvi) <- plot.id[names(block.B.ndvi)]
names(block.B.rep.ndvi) <- plot.id[names(block.B.rep.ndvi)]
blockB.ndvi.test=t.test(block.B.ndvi, block.B.rep.ndvi, paired=T)
blockB.ndvi.test ##t.test of treatment plots in Block B against its replicates
##Block B and replicates biomass
block.B.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.B))]
names(block.B.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.B))]
block.B.rep.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.B.rep))]
names(block.B.rep.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.B.rep))]
names(block.B.biomass) = plot.id[names(block.B.biomass)]
names(block.B.rep.biomass) = plot.id[names(block.B.rep.biomass)]
block.B.rep.biomass = block.B.rep.biomass[-11] #Plot 67 biomass is missing from B, so counterpart is removed from notB
block.B.biomass.test = t.test(plot.notB.biomass, plot.B.biomass, paired = T)
block.B.biomass.test
##Block B and replicates NDVI
plots.B <- soil.cover$plot[which(soil.cover$block_BS.mod == 'B')]
block.B <- plot.id[names(plot.id) %in% as.character(plots.B)]
block.B.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(t.plots.B))]
names(block.B.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.B))]
block.B.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.B)]), names(t.plots.B))]
block.B.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.B.rep))]
names(block.B.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.B.rep))]
names(block.B.ndvi) <- plot.id[names(block.B.ndvi)]
names(block.B.rep.ndvi) <- plot.id[names(block.B.rep.ndvi)]
blockB.ndvi.test=t.test(block.B.ndvi, block.B.rep.ndvi, paired=T)
blockB.ndvi.test ##t.test of treatment plots in Block B against its replicates
##Block B and replicates biomass
block.B.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.B))]
names(block.B.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.B))]
block.B.rep.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.B.rep))]
names(block.B.rep.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.B.rep))]
names(block.B.biomass) = plot.id[names(block.B.biomass)]
names(block.B.rep.biomass) = plot.id[names(block.B.rep.biomass)]
block.B.rep.biomass = block.B.rep.biomass[-11] #Plot 67 biomass is missing from B, so counterpart is removed from notB
block.B.biomass.test = t.test(plot.notB.biomass, plot.B.biomass, paired = T)
block.B.biomass.test
##Block B and replicates NDVI
plots.B <- soil.cover$plot[which(soil.cover$block_BS.mod == 'B')]
block.B <- plot.id[names(plot.id) %in% as.character(plots.B)]
block.B.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(t.plots.B))]
names(block.B.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.B))]
block.B.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.B)]), names(t.plots.B))]
block.B.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.B.rep))]
names(block.B.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.B.rep))]
names(block.B.ndvi) <- plot.id[names(block.B.ndvi)]
names(block.B.rep.ndvi) <- plot.id[names(block.B.rep.ndvi)]
block.B.ndvi.test=t.test(block.B.ndvi, block.B.rep.ndvi, paired=T)
block.B.ndvi.test ##t.test of treatment plots in Block B against its replicates
##Block B and replicates biomass
block.B.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.B))]
names(block.B.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.B))]
block.B.rep.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.B.rep))]
names(block.B.rep.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.B.rep))]
names(block.B.biomass) = plot.id[names(block.B.biomass)]
names(block.B.rep.biomass) = plot.id[names(block.B.rep.biomass)]
block.B.rep.biomass = block.B.rep.biomass[-11] #Plot 67 biomass is missing from B, so counterpart is removed from notB
block.B.biomass.test = t.test(block.B.biomass, block.B.rep.biomass, paired = T)
block.B.biomass.test
##Block B and replicates NDVI
plots.B <- soil.cover$plot[which(soil.cover$block_BS.mod == 'B')]
block.B <- plot.id[names(plot.id) %in% as.character(plots.B)]
block.B.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(t.plots.B))]
names(block.B.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(t.plots.B))]
block.B.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% t.plots.B)]), names(t.plots.B))]
block.B.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.B.rep))]
names(block.B.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.B.rep))]
names(block.B.ndvi) <- plot.id[names(block.B.ndvi)]
names(block.B.rep.ndvi) <- plot.id[names(block.B.rep.ndvi)]
block.B.ndvi.test=t.test(block.B.ndvi, block.B.rep.ndvi, paired=T)
block.B.ndvi.test ##t.test of treatment plots in Block B against its replicates
##Block B and replicates biomass
block.B.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.B))]
names(block.B.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.B))]
block.B.rep.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.B.rep))]
names(block.B.rep.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.B.rep))]
names(block.B.biomass) = plot.id[names(block.B.biomass)]
names(block.B.rep.biomass) = plot.id[names(block.B.rep.biomass)]
block.B.biomass.test = t.test(block.B.biomass, block.B.rep.biomass, paired = T)
block.B.biomass.test
##Block C and replicates NDVI
plots.C <- soil.cover$plot[which(soil.cover$block_BS.mod == 'C')]
block.C <- plot.id[names(plot.id) %in% as.character(plots.C)]
block.C.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.C))]
names(block.C.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.C))]
block.C.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% block.C)]), names(block.C))]
block.C.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.C.rep))]
names(block.C.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.C.rep))]
names(block.C.ndvi) <- plot.id[names(block.C.ndvi)]
names(block.C.rep.ndvi) <- plot.id[names(block.C.rep.ndvi)]
block.C.ndvi.test=t.test(block.C.ndvi, block.C.rep.ndvi, paired=T)
block.C.ndvi.test ##t.test of treatment plots in Block C against its replicates
##Block C and replicates biomass
block.C.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.C))]
names(block.C.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.C))]
block.C.rep.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.C.rep))]
names(block.C.rep.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.C.rep))]
names(block.C.biomass) = plot.id[names(block.C.biomass)]
names(block.C.rep.biomass) = plot.id[names(block.C.rep.biomass)]
block.C.biomass.test = t.test(block.C.biomass, block.C.rep.biomass, paired = T)
block.C.biomass.test
##Block D and replicates NDVI
plots.D <- soil.cover$plot[which(soil.cover$block_BS.mod == 'D')]
block.D <- plot.id[names(plot.id) %in% as.character(plots.D)]
block.D.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.D))]
names(block.D.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.D))]
block.D.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% block.D)]), names(block.D))]
block.D.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.D.rep))]
names(block.D.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.D.rep))]
names(block.D.ndvi) <- plot.id[names(block.D.ndvi)]
names(block.D.rep.ndvi) <- plot.id[names(block.D.rep.ndvi)]
block.D.ndvi.test=t.test(block.D.ndvi, block.D.rep.ndvi, paired=T)
block.D.ndvi.test ##t.test of treatment plots in Block D against its replicates
##Block D and replicates biomass
block.D.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.D))]
names(block.D.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.D))]
block.D.rep.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.D.rep))]
names(block.D.rep.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.D.rep))]
names(block.D.biomass) = plot.id[names(block.D.biomass)]
names(block.D.rep.biomass) = plot.id[names(block.D.rep.biomass)]
block.D.biomass.test = t.test(block.D.biomass, block.D.rep.biomass, paired = T)
block.D.biomass.test
##Block E and replicates NEVI
plots.E <- soil.cover$plot[which(soil.cover$block_BS.mod == 'E')]
block.E <- plot.id[names(plot.id) %in% as.character(plots.E)]
block.E.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.E))]
names(block.E.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.E))]
block.E.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% block.E)]), names(block.E))]
block.E.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.E.rep))]
names(block.E.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.E.rep))]
names(block.E.ndvi) <- plot.id[names(block.E.ndvi)]
names(block.E.rep.ndvi) <- plot.id[names(block.E.rep.ndvi)]
block.E.ndvi.test=t.test(block.E.ndvi, block.E.rep.ndvi, paired=T)
block.E.ndvi.test ##t.test of treatment plots in Block E against its replicates
##Block E and replicates biomass
block.E.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.E))]
names(block.E.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.E))]
block.E.rep.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.E.rep))]
names(block.E.rep.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.E.rep))]
names(block.E.biomass) = plot.id[names(block.E.biomass)]
names(block.E.rep.biomass) = plot.id[names(block.E.rep.biomass)]
block.E.biomass.test = t.test(block.E.biomass, block.E.rep.biomass, paired = T)
block.E.biomass.test
##Block F and replicates NDVI
plots.F <- soil.cover$plot[which(soil.cover$block_BS.mod == 'F')]
block.F <- plot.id[names(plot.id) %in% as.character(plots.F)]
block.F.ndvi <- soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.F))]
names(block.F.ndvi) <- soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.F))]
block.F.rep <- plot.id[setdiff(names(plot.id[which(plot.id %in% block.F)]), names(block.F))]
block.F.rep.ndvi = soil.cover$ndvi_v1[which(as.character(soil.cover$plot) %in% names(block.F.rep))]
names(block.F.rep.ndvi) <-soil.cover$plot[which(as.character(soil.cover$plot) %in% names(block.F.rep))]
names(block.F.ndvi) <- plot.id[names(block.F.ndvi)]
names(block.F.rep.ndvi) <- plot.id[names(block.F.rep.ndvi)]
block.F.ndvi.test=t.test(block.F.ndvi, block.F.rep.ndvi, paired=T)
block.F.ndvi.test ##t.test of treatment plots in Block F against its replicates
##Block F and replicates biomass
block.F.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.F))]
names(block.F.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.F))]
block.F.rep.biomass = ndvi.mat$biomass.tmts[which(as.character(ndvi.mat$plot) %in% names(block.F.rep))]
names(block.F.rep.biomass) = ndvi.mat$plot[which(as.character(ndvi.mat$plot) %in% names(block.F.rep))]
names(block.F.biomass) = plot.id[names(block.F.biomass)]
names(block.F.rep.biomass) = plot.id[names(block.F.rep.biomass)]
plot.F.biomass = plot.F.biomass[-10] #biomass is missing from F.rep, so counterpart is removed from F
block.F.biomass.test = t.test(block.F.biomass, block.F.rep.biomass, paired = T)
block.F.biomass.test
block.F.biomass = block.F.biomass[-10]
block.F.biomass.test = t.test(block.F.biomass, block.F.rep.biomass, paired = T)
block.F.biomass.test
layout(matrix(1:2, 2))
hist(soil.cover$AHOR_cm[which(soil.cover$block_BS.mod %in% LETTERS[1:3])], 20, main = 'W superblock', xlab = 'A horizon depth', xlim = range(soil.cover$AHOR_cm, na.rm = T))
hist(soil.cover$AHOR_cm[which(soil.cover$block_BS.mod %in% LETTERS[1])], 20, main = 'Block A', xlab = 'A horizon depth', xlim = range(blocks$AHOR_cm, na.rm = T))
layout(matrix(1:2, 2))
hist(soil.cover$AHOR_cm[which(soil.cover$block_BS.mod %in% LETTERS[1:3])], 20, main = 'W superblock', xlab = 'A horizon depth', xlim = range(soil.cover$AHOR_cm, na.rm = T))
hist(soil.cover$AHOR_cm[which(soil.cover$block_BS.mod %in% LETTERS[1])], 20, main = 'Block A', xlab = 'A horizon depth', xlim = range(soil.cover$AHOR_cm, na.rm = T))
layout(matrix(1:2, 2))
hist(soil.cover$AHOR_cm[which(soil.cover$block_BS.mod %in% LETTERS[1:3])], 20, main = 'W superblock', xlab = 'A horizon depth', xlim = range(0,45), ylim = range(0,25))
hist(soil.cover$AHOR_cm[which(soil.cover$block_BS.mod %in% LETTERS[1])], 20, main = 'Block A', xlab = 'A horizon depth', xlim = xlim = range(0,45), ylim = range(0,25))
layout(matrix(1:2, 2))
hist(soil.cover$AHOR_cm[which(soil.cover$block_BS.mod %in% LETTERS[1:3])], 20, main = 'W superblock', xlab = 'A horizon depth', xlim = range(soil.cover$AHOR_cm, na.rm = T))
hist(soil.cover$AHOR_cm[which(soil.cover$block_BS.mod %in% LETTERS[1])], 20, main = 'Block A', xlab = 'A horizon depth', xlim = range(soil.cover$AHOR_cm, na.rm = T))
layout(matrix(1:2, 2))
hist(soil.cover$AHOR_cm[which(soil.cover$block_BS.mod %in% LETTERS[1:3])], 20, main = 'W superblock', xlab = 'A horizon depth', xlim = range(20,45), ylim = range(0,25))
hist(soil.cover$AHOR_cm[which(soil.cover$block_BS.mod %in% LETTERS[1])], 20, main = 'Block A', xlab = 'A horizon depth', xlim = range(20,45), ylim = range(0,25))
block.A.soil.df = data.frame(Block = rep(c("A", "A.rep"), each=24),
NDVI = block.A.ndvi, block.A.rep.ndvi
A-Horizon = soil.cover$AHOR_cm[which(as.character(soil.cover$plot) %in% names(block.A))], soil.cover$AHOR_cm[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
block.A.soil.df = data.frame(Block = rep(c("A", "A.rep"), each=24),
NDVI = block.A.ndvi, block.A.rep.ndvi,
A-Horizon = soil.cover$AHOR_cm[which(as.character(soil.cover$plot) %in% names(block.A))], soil.cover$AHOR_cm[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
block.A.soil.df = data.frame(Block = rep(c("A", "A.rep"), each=24),
NDVI = block.A.ndvi, block.A.rep.ndvi,
A.Hor = soil.cover$AHOR_cm[which(as.character(soil.cover$plot) %in% names(block.A))], soil.cover$AHOR_cm[which(as.character(soil.cover$plot) %in% names(block.A.rep))]
)
View(block.A.soil.df)
View(block.A.biomass.test)
source(../SCRIPTS/00.readData.R)
source("../SCRIPTS/00.readData.R")
load("..DATA/dat.blocksSoilCover.csv")
load("../DATA/dat.blocksSoilCover.csv")
read.csv("../DATA/dat.blocksSoilCover.csv")
dat.soil.cover = read.csv("../DATA/dat.blocksSoilCover.csv")
dat.compo = read.csv("../DATA/dat.composition.2017.csv")
dat.phylo.cover = read.csv("..DATA/dat.cover.diversity.2017.csv")
dat.phylo.cover = read.csv("../DATA/dat.cover.diversity.2017.csv")
load("../DATA/plot.design.r")
source("../DATA/plot.design.r")
View(dat.compo)
View(dat)
View(dat.compo)
View(dat.phylo.cover)
View(dat.soil.cover)
View(ndvi)
View(ndvi.mat)
plot = c(1:437)
all.prairie = as.data.frame(plot)
View(all.prairie)
all.prairie$x = dat.soil.cover$x
all.prairie$y = dat.soil.cover$y
all.prairie$block = dat.soil.cover$block_BS.mod
?merge
all.prairie = merge(all.praire, dat.soil.cover)
all.prairie = merge(all.prairie, dat.soil.cover)
all.prairie$block_BS.mod = NULL
all.prairie$X = NULL
plot = c(1:437)
all.prairie = as.data.frame(plot)
all.prairie$x = dat.soil.cover$x
all.prairie$y = dat.soil.cover$y
all.prairie$block = dat.soil.cover$block_BS.mod
all.prairie = merge(all.prairie, dat.soil.cover, by = "plot")
plot = c(1:437)
all.prairie = as.data.frame(plot)
all.prairie = merge(all.prairie, dat.soil.cover, by = "plot")
names(all.prairie)[names(all.prairie)=="blocks_BS.mod"] <- "block"
all.prairie$X = NULL
names(all.prairie)[names(all.prairie)=="block_BS.mod"] <- "block"
names(all.prairie)[names(all.prairie)=="ndvi_v1"] <- "ndvi"
names(dat.compo)[names(dat.compo)=="X"] <- "plot"
View(plot.design)
all.prairie.test = merge(all.prairie, dat.phylo.cover)
View(all.prairie.test)
all.prairie.test = merge(all.prairie, dat.phylo.cover, all.x = T)
all.prairie = merge(all.prairie, dat.phylo.cover, all.x = T)
names(all.prairie)[names(all.prairie)=="sp"] <- "plot.ID"
all.prairie$X = NULL
all.prairie.test = merge(all.prairie, ndvi.mat, all.x = T)
View(all.prairie.test)
all.prairie = merge(all.prairie, ndvi.mat, all.x = T)
all.prairie$as.is = NULL
all.prairie$type = all.prairie$Plot.category[which(as.character("Monoculture"))]
all.prairie$type = all.prairie$Plot.category[which(as.character == "Monoculture"))]
all.prairie$type = all.prairie$Plot.category[which(as.character == "Monoculture")]
all.prairie.test$type = all.prairie.test$Plot.category == "Monoculture"
View(all.prairie.test)
all.prairie.test$type = all.prairie.test$type[which(all.prairie.test$Plot.category == "Monoculture") as.character("Mono")]
all.prairie.test$type = all.prairie.test$type[which(all.prairie.test$Plot.category == "Monoculture")] == "Mono"
all.prairie.test$type[all.prairie.test$Plot.category == "Monoculture"] <- "Mono"
all.prairie$type[all.prairie$Plot.category == "Monoculture"] <- "Mono"
View(all.prairie.test)
View(ndvi.mat)
View(dat.soil.cover)
View(dat.phylo.cover)
all.prairie.test = merge(all.prairie.test, dat.phylo.cover$type)
all.prairie.test <- all.prairie
View(all.prairie.test)
all.prairie.test = merge(all.prairie.test, dat.phylo.cover$type, all.x = T)
all.prairie.test$type[all.prairie.test$Plot.category == "Monoculture"] <- "Mono"
all.prairie.test$type = all.prairie.test$Plot.category == "Monoculture"
all.prairie.test = merge(all.prairie.test, dat.phylo.cover$type, all.x = T)
all.prairie.test <- all.prairie
all.prarie.test = within(all.prairie.test, type[type == 'NA' & Plot.category == 'Monoculture'] <- "Mono")
all.prarie.test = within(all.prairie.test, Name[type == 'NA' & Plot.category == 'Monoculture'] <- "Mono")
all.prairie.test %>% mutate(type = ifelse(Plot.category == "Monoculture" & type == "NA", "Mono", type))
library(dplyr)
require(dplyr)
install.packages(dplyr)
install.packages("dplyr")
require(dplyr)
all.prairie.test %>% mutate(type = ifelse(Plot.category == "Monoculture" & type == "NA", "Mono", type))
all.prairie.test[all.prairie.test$type == "NA" & all.prairie.test$Plot.category == "Monoculture",type] <- "Mono"
all.prairie.test[all.prairie.test$Plot.category == "Monoculture", all.prairie.test$type] <- "Mono"
all.prairie.test <- within(all.prairie.test, type[Plot.category == 'Monoculture'] <- 'Mono')
all.prarie.test$type = "Mono"[which(all.prarie.test$Plot.category == 'Monoculture')]
all.prarie.test$type = "Mono"
View(all.prarie.test)
rm(all.prarie.test, all.prairie.test)
View(all.prairie)
envir.df = data.frame(all.prairie[1,6,7,8, 11,12,13,14,15])
envir.df = data.frame(all.prairie[c(1,6,7,8, 11,12,13,14,15)])
View(envir.df)
envir.pca = prcomp(envir.df,
center = TRUE,
scale. = TRUE)
envir.pca = prcomp(envir.df,
center = TRUE,
scale. = TRUE)
envir.df = data.frame(all.prairie[c(6,7,8, 11,12,13,14,15)])
envir.pca = prcomp(envir.df, center = TRUE, scale. = TRUE)
envir.df = data.frame(all.prairie[c(6,7, 11,12,13,14,15)])
envir.pca = prcomp(envir.df, center = TRUE, scale. = TRUE)
